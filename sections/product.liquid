{% comment %}
  Modern Product Section - 2024 Shopify Standards
  Features: Variant selection, responsive images, structured data, accessibility, customization
{% endcomment %}


<script src="{{ 'product-zoom.js' | asset_url }}" defer></script>

<section class="breadcrumb-trail">
  <div class="container">
    <nav aria-label="Breadcrumb">
      <a href="{{ routes.root_url }}">STARSIDE_ARMORY</a> &gt;
      {% if product.collections.first %}
        <a href="{{ product.collections.first.url }}">{{ product.collections.first.title | upcase | replace: ' ', '_' }}</a> &gt;
      {% endif %}
      <span class="current-item" aria-current="page">{{ product.title | upcase | replace: ' ', '_' }}</span>
    </nav>
  </div>
</section>

<section id="product-{{ section.id }}" class="product-interface-section section-padding{% if section.settings.color_scheme != 'background-1' %} color-{{ section.settings.color_scheme }}{% endif %}" 
         style="--section-padding-top: {{ section.settings.padding_top }}px; --section-padding-bottom: {{ section.settings.padding_bottom }}px;"
         itemscope itemtype="https://schema.org/Product">
  
  <div class="{% if section.settings.full_width %}page-width-desktop{% else %}container{% endif %}">
    <div class="product-layout" style="--product-media-width: {{ section.settings.media_width }}%;">
      
      <!-- Product Media Section -->
      <div class="product-visuals data-box">
        <div class="data-box-header">//: VISUAL_DATA ://</div>
        
        <div class="product-media-gallery">
          <div class="main-media-container">
            {%- if product.featured_media -%}
              <div class="product-media" data-media-id="{{ product.featured_media.id }}">
                {%- if product.featured_media.media_type == 'image' -%}
                  <img src="{{ product.featured_media | image_url: width: 800 }}" 
                       alt="{{ product.featured_media.alt | escape }}"
                       id="ProductMainImage-{{ section.id }}"
                       width="800"
                       height="{{ 800 | divided_by: product.featured_media.aspect_ratio | round }}"
                       loading="eager"
                       sizes="(min-width: 990px) {{ section.settings.media_width }}vw, 100vw"
                       srcset="{{ product.featured_media | image_url: width: 400 }} 400w,
                               {{ product.featured_media | image_url: width: 600 }} 600w,
                               {{ product.featured_media | image_url: width: 800 }} 800w,
                               {{ product.featured_media | image_url: width: 1200 }} 1200w,
                               {{ product.featured_media | image_url: width: 1600 }} 1600w"
                       {% comment %} Always add zoom data for functionality {% endcomment %}
                       data-zoom="{{ product.featured_media | image_url: width: 1600 }}"
                       itemprop="image">
                {%- elsif product.featured_media.media_type == 'video' -%}
                  {{ product.featured_media | video_tag: controls: true, muted: true, loop: true }}
                {%- elsif product.featured_media.media_type == 'model' -%}
                  {{ product.featured_media | model_viewer_tag }}
                {%- endif -%}
              </div>
            {%- else -%}
              <div class="product-media-placeholder">
                {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
              </div>
            {%- endif -%}
            
            {% if section.settings.show_media_overlay %}
              <div class="image-overlay-data">SYS_IMG_DISPLAY_{{ product.featured_media.position | default: '01' }}</div>
            {% endif %}

            {% comment %} Show zoom button if enabled OR if setting doesn't exist yet (default to true) {% endcomment %}
            {% if section.settings.enable_zoom != false and product.featured_media.media_type == 'image' %}
              <button type="button" class="zoom-button" aria-label="Zoom image">
                <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
                  <path d="M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z"/>
                </svg>
              </button>
            {% endif %}
          </div>

          {% if product.media.size > 1 and section.settings.show_thumbnails %}
            <div class="thumbnail-gallery" role="tablist" aria-label="Product media gallery">
              {% for media in product.media limit: section.settings.max_thumbnails %}
                <button type="button" 
                        class="thumbnail-btn {% if media == product.featured_media %}active{% endif %}" 
                        data-media-id="{{ media.id }}"
                        data-media-type="{{ media.media_type }}"
                        {% if media.media_type == 'image' %}
                          data-src="{{ media | image_url: width: 800 }}"
                          data-srcset="{{ media | image_url: width: 400 }} 400w, {{ media | image_url: width: 800 }} 800w, {{ media | image_url: width: 1200 }} 1200w"
                          {% if section.settings.enable_zoom %}
                            data-zoom="{{ media | image_url: width: 1600 }}"
                          {% endif %}
                        {% elsif media.media_type == 'video' %}
                          data-video-html="{{ media | video_tag: controls: true, muted: true, loop: section.settings.video_loop }}"
                        {% elsif media.media_type == 'external_video' %}
                          data-external-video-html="{{ media | external_video_tag }}"
                        {% elsif media.media_type == 'model' %}
                          data-model-html="{{ media | model_viewer_tag: reveal: 'interaction', toggleable: true }}"
                        {% endif %}
                        role="tab"
                        aria-selected="{% if media == product.featured_media %}true{% else %}false{% endif %}"
                        aria-controls="ProductMainImage-{{ section.id }}"
                        aria-label="Load {{ media.media_type }} {{ forloop.index }}">
                  {%- if media.media_type == 'image' -%}
                    <img src="{{ media | image_url: width: 120 }}" 
                         alt="{{ media.alt | escape }}"
                         width="120"
                         height="{{ 120 | divided_by: media.aspect_ratio | round }}"
                         loading="lazy">
                  {%- elsif media.media_type == 'video' -%}
                    <img src="{{ media.preview_image | image_url: width: 120 }}" 
                         alt="{{ media.alt | escape }}"
                         width="120"
                         height="{{ 120 | divided_by: media.preview_image.aspect_ratio | round }}"
                         loading="lazy">
                    <span class="media-icon video-icon" aria-hidden="true">â–¶</span>
                  {%- elsif media.media_type == 'model' -%}
                    <img src="{{ media.preview_image | image_url: width: 120 }}" 
                         alt="{{ media.alt | escape }}"
                         width="120"
                         height="{{ 120 | divided_by: media.preview_image.aspect_ratio | round }}"
                         loading="lazy">
                    <span class="media-icon model-icon" aria-hidden="true">3D</span>
                  {%- endif -%}
                </button>
              {% endfor %}
            </div>
          {% endif %}
        </div>
      </div>

      <!-- Product Information Section -->
      <div class="product-data">
        <div class="data-box">
          <div class="data-box-header">//: ITEM_SPECIFICATIONS ://</div>
          <div class="product-info-content">
            
            {% if section.settings.show_vendor and product.vendor != blank %}
              <div class="product-vendor" itemprop="brand" itemscope itemtype="https://schema.org/Brand">
                <span itemprop="name">{{ product.vendor }}</span>
              </div>
            {% endif %}

            <h1 class="product-title-detail{% if section.settings.enable_glitch_effect %} glitch{% endif %}" 
                {% if section.settings.enable_glitch_effect %}data-text="{{ product.title | escape }}"{% endif %}
                itemprop="name">
              {{ product.title | escape }}
            </h1>
            
            <div class="system-diagnostic-line">
              <span class="diag-label">//:ITEM_IDENT:</span>
              <span class="diag-value id-value" itemprop="sku">{{ product.selected_or_first_available_variant.sku | default: 'N/A' }}</span>
              <span class="diag-label">//:OP_STATUS:</span>
              <span class="diag-value status-value {% if product.available %}status-operational{% else %}status-offline{% endif %}">
                {% if product.available %}[AVAILABLE]{% else %}[OUT_OF_STOCK]{% endif %}
              </span>
            </div>

            {% if product.description != blank and section.settings.show_description %}
              <div class="product-short-desc rte" itemprop="description">
                {{ product.description }}
              </div>
            {% endif %}

            <!-- Product Specifications (if available) -->
            {% if product.metafields.product_specs.class or product.metafields.product_specs.rarity or product.metafields.product_specs.materials %}
              <div class="product-specs data-box">
                <div class="data-box-header">//:ITEM_SPECIFICATIONS://</div>
                <div class="specs-content">
                  {% if product.metafields.product_specs.class %}
                    <div class="spec-row">
                      <span class="spec-label">CLASS:</span>
                      <span class="spec-value">{{ product.metafields.product_specs.class }}</span>
                    </div>
                  {% endif %}
                  
                  {% if product.metafields.product_specs.rarity %}
                    <div class="spec-row">
                      <span class="spec-label">RARITY:</span>
                      <span class="spec-value rarity-{{ product.metafields.product_specs.rarity | downcase }}">
                        {{ product.metafields.product_specs.rarity | upcase }}
                      </span>
                    </div>
                  {% endif %}
                  
                  {% if product.metafields.product_specs.materials %}
                    <div class="spec-row">
                      <span class="spec-label">MATERIALS:</span>
                      <span class="spec-value">{{ product.metafields.product_specs.materials }}</span>
                    </div>
                  {% endif %}
                  
                  {% if product.metafields.product_specs.dimensions_detailed %}
                    <div class="spec-row">
                      <span class="spec-label">DIMENSIONS:</span>
                      <span class="spec-value">{{ product.metafields.product_specs.dimensions_detailed }}</span>
                    </div>
                  {% endif %}
                </div>
              </div>
            {% endif %}

            <!-- Product Features (if available) -->
            {% if product.metafields.product_info.features_list %}
              <div class="product-features data-box">
                <div class="data-box-header">//:FEATURE_SET://</div>
                <div class="features-content">
                  {{ product.metafields.product_info.features_list | newline_to_br }}
                </div>
              </div>
            {% endif %}

            <!-- Price Block -->
            <div class="price-block data-box" itemprop="offers" itemscope itemtype="https://schema.org/Offer">
              <div class="data-box-header">//:TRANSACTION_MODULE://</div>
              <div class="price-content">
                <span class="price-label">ACQUISITION_COST:</span>
                <div class="price-display">
                  <span class="product-price-detail terminal-green-glow" id="price-{{ section.id }}" itemprop="price" content="{{ product.selected_or_first_available_variant.price | divided_by: 100.0 }}">
                    {{ product.selected_or_first_available_variant.price | money }}
                  </span>
                  {% if product.selected_or_first_available_variant.compare_at_price > product.selected_or_first_available_variant.price %}
                    <span class="compare-at-price" id="ComparePrice-{{ section.id }}">
                      <span class="visually-hidden">{{ 'products.product.regular_price' | t }}</span>
                      <s>{{ product.selected_or_first_available_variant.compare_at_price | money }}</s>
                    </span>
                  {% endif %}
                  {% if product.selected_or_first_available_variant.unit_price_measurement %}
                    <div class="unit-price">
                      <span class="visually-hidden">{{ 'products.product.unit_price_label' | t }}</span>
                      {{ product.selected_or_first_available_variant.unit_price | money }}
                      {%- if product.selected_or_first_available_variant.unit_price_measurement.reference_value != 1 -%}
                        {{- product.selected_or_first_available_variant.unit_price_measurement.reference_value -}}
                      {%- endif -%}
                      {{ product.selected_or_first_available_variant.unit_price_measurement.reference_unit }}
                    </div>
                  {% endif %}
                </div>
                
                <meta itemprop="priceCurrency" content="{{ cart.currency.iso_code }}">
                {% if product.selected_or_first_available_variant.available %}
                                  <link itemprop="availability" href="https://schema.org/InStock">
              {% else %}
                <link itemprop="availability" href="https://schema.org/OutOfStock">
                {% endif %}
                
                {% if section.settings.show_inventory %}
                  <span class="stock-indicator">//:STOCK_LEVEL: 
                    {% assign variant = product.selected_or_first_available_variant %}
                    {% if variant.inventory_management == "shopify" and variant.inventory_quantity <= 0 %}
                      [DEPLETED]
                    {% elsif variant.inventory_quantity < 5 and variant.inventory_quantity > 0 %}
                      [LOW: {{ variant.inventory_quantity }}]
                    {% else %}
                      [AVAILABLE]
                    {% endif %}
                  </span>
                {% endif %}
              </div>
            </div>

            <!-- Product Form -->
            {%- form 'product', product, id: "product-form-{{ section.id }}", class: "product-form", novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
              <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" class="product-variant-id">
              
              <!-- Variant Selection -->
              {% unless product.has_only_default_variant %}
                <variant-selects class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" data-update-url="true">
                <div class="variant-selection data-box">
                  <div class="data-box-header">//:CONFIGURATION_OPTIONS://</div>
                  <div class="variant-content">
                    {% for option in product.options_with_values %}
                      <div class="variant-option">
                        <label for="Option-{{ section.id }}-{{ forloop.index0 }}" class="variant-label">
                          {{ option.name | upcase }}:
                        </label>
                        <div class="variant-input-wrapper">
                          {% if section.settings.variant_style == 'dropdown' %}
                            <select id="Option-{{ section.id }}-{{ forloop.index0 }}" 
                                    name="options[{{ option.name | escape }}]" 
                                    class="variant-select">
                              {% for value in option.values %}
                                <option value="{{ value | escape }}" 
                                        {% if option.selected_value == value %}selected="selected"{% endif %}>
                                  {{ value }}
                                </option>
                              {% endfor %}
                            </select>
                          {% else %}
                            <div class="variant-buttons" role="radiogroup" aria-labelledby="Option-{{ section.id }}-{{ forloop.index0 }}">
                              {% for value in option.values %}
                                <input type="radio" 
                                       id="Option-{{ section.id }}-{{ forloop.index0 }}-{{ forloop.index }}"
                                       name="options[{{ option.name | escape }}]" 
                                       value="{{ value | escape }}"
                                       {% if option.selected_value == value %}checked{% endif %}
                                       class="variant-radio visually-hidden">
                                <label for="Option-{{ section.id }}-{{ forloop.index0 }}-{{ forloop.index }}" 
                                       class="variant-button">
                                  {{ value }}
                                </label>
                              {% endfor %}
                            </div>
                          {% endif %}
                        </div>
                      </div>
                    {% endfor %}
                  </div>
                </div>
                <script type="application/json">
                  {{ product.variants | json }}
                </script>
                </variant-selects>
              {% endunless %}

              <!-- Actions Block -->
              <div class="actions-block data-box">
                <div class="data-box-header">//:ENGAGEMENT_PROTOCOL://</div>
                <div class="action-content">
                  {% if section.settings.show_quantity_selector %}
                    <div class="quantity-selector">
                      <label for="Quantity-{{ section.id }}" class="diag-label">QTY:</label>
                      <button type="button" class="qty-btn btn-qty" data-action="decrease" aria-label="Decrease quantity">-</button>
                      <input type="number" 
                             id="Quantity-{{ section.id }}" 
                             name="quantity" 
                             value="1" 
                             min="1" 
                             {% if product.selected_or_first_available_variant.inventory_management == "shopify" and product.selected_or_first_available_variant.inventory_policy == "deny" %}
                               max="{{ product.selected_or_first_available_variant.inventory_quantity }}"
                             {% endif %}
                             class="quantity-input"
                             aria-label="Product quantity">
                      <button type="button" class="qty-btn btn-qty" data-action="increase" aria-label="Increase quantity">+</button>
                    </div>
                  {% endif %}
                  
                  <button type="submit" 
                          name="add" 
                          class="btn btn-cta-primary product-page-cta" 
                          {% unless product.selected_or_first_available_variant.available %}disabled="disabled"{% endunless %}
                          aria-describedby="ProductPrice-{{ section.id }}"
                          data-add-text="{{ section.settings.add_to_cart_text | default: '[ADD_TO_INVENTORY_CORE]' }}"
                          data-sold-out-text="{{ section.settings.sold_out_text | default: '[ASSET_UNAVAILABLE]' }}">
                    <span class="btn-text">
                      {% if product.selected_or_first_available_variant.available %}
                        {{ section.settings.add_to_cart_text | default: '[ADD_TO_INVENTORY_CORE]' }}
                      {% else %}
                        {{ section.settings.sold_out_text | default: '[ASSET_UNAVAILABLE]' }}
                      {% endif %}
                    </span>
                    <div class="loading-overlay" aria-hidden="true">
                      <div class="loading-spinner"></div>
                    </div>
                  </button>

                  {% if section.settings.enable_payment_button %}
                    {{ form | payment_button }}
                  {% endif %}
                </div>
              </div>
            {%- endform -%}

            <script>
              class VariantSelects extends HTMLElement {
                constructor() {
                  super();
                  this.addEventListener('change', this.onVariantChange);
                }

                onVariantChange() {
                  this.updateOptions();
                  this.updateMasterId();
                  this.updateVariantInput();
                  this.removeErrorMessage();

                  if (!this.currentVariant) {
                    this.toggleAddButton(true, '', false);
                    this.setUnavailable();
                  } else {
                    this.updateMedia();
                    this.updateURL();
                    this.renderProductInfo();
                    this.toggleAddButton(!this.currentVariant.available, window.variantStrings.soldOut);
                  }
                }

                updatePickupAvailability() {
                  // Placeholder for pickup availability functionality
                }

                removeErrorMessage() {
                  // Placeholder for error message removal
                }

                updateVariantInfo() {
                  // Placeholder for variant info updates
                }

                updateOptions() {
                  this.options = Array.from(this.querySelectorAll('select, input[type="radio"]:checked'), (select) => select.value);
                }

                updateMasterId() {
                  console.log('Looking for variant with options:', this.options);
                  this.currentVariant = this.getVariantData().find((variant) => {
                    return !variant.options.map((option, index) => {
                      return this.options[index] === option;
                    }).includes(false);
                  });
                  console.log('Found variant:', this.currentVariant?.id, this.currentVariant?.title);
                }

                updateVariantInput() {
                  console.log('[VARIANT DEBUG] Updating variant input for variant:', this.currentVariant?.id);
                  const productForms = document.querySelectorAll(`#product-form-${this.dataset.section}, #product-form-installment`);
                  console.log('[VARIANT DEBUG] Found product forms:', productForms.length);
                  
                  productForms.forEach((productForm) => {
                    const input = productForm.querySelector('input[name="id"]');
                    console.log('[VARIANT DEBUG] Found variant input:', input, 'Current value:', input?.value);
                    
                    if (input && this.currentVariant) {
                      const oldValue = input.value;
                      input.value = this.currentVariant.id;
                      console.log('[VARIANT DEBUG] Updated variant input from', oldValue, 'to:', input.value);
                      
                      // Trigger change event to notify other scripts
                      input.dispatchEvent(new Event('change', { bubbles: true }));
                      
                      // Also update the form's data attribute for debugging
                      productForm.dataset.selectedVariant = this.currentVariant.id;
                    } else {
                      console.warn('[VARIANT DEBUG] No variant input found or no current variant');
                    }
                  });
                }

                renderProductInfo() {
                  if (!this.currentVariant) return;
                  
                  const priceElement = document.getElementById(`price-${this.dataset.section}`);
                  if (priceElement) {
                    priceElement.innerHTML = this.getPrice();
                  }

                  const skuElement = document.querySelector('.id-value');
                  if (skuElement) {
                    skuElement.textContent = this.currentVariant.sku || 'N/A';
                  }
                }

                getPrice() {
                  // Use basic formatting if Shopify.formatMoney is not available
                  const price = this.currentVariant.price;
                  const formatted = window.Shopify && window.Shopify.formatMoney 
                    ? window.Shopify.formatMoney(price, window.cartStrings.money_format)
                    : `$${(price / 100).toFixed(2)}`;
                  return `<span class="product-price-detail terminal-green-glow">${formatted}</span>`;
                }

                toggleAddButton(disable = true, text, modifyClass = true) {
                  const productForm = document.getElementById(`product-form-${this.dataset.section}`);
                  if (!productForm) return;

                  const addButton = productForm.querySelector('[name="add"]');
                  const addButtonText = productForm.querySelector('.btn-text');

                  if (!addButton) return;

                  if (disable) {
                    addButton.setAttribute('disabled', 'disabled');
                    if (text) addButtonText.textContent = text;
                  } else {
                    addButton.removeAttribute('disabled');
                    addButtonText.textContent = window.variantStrings.addToCart || '[ADD_TO_INVENTORY_CORE]';
                  }
                }

                setUnavailable() {
                  const addButton = document.querySelector(`#product-form-${this.dataset.section} [name="add"]`);
                  const addButtonText = document.querySelector(`#product-form-${this.dataset.section} .btn-text`);
                  const price = document.getElementById(`price-${this.dataset.section}`);
                  
                  if (!addButton) return;
                  
                  addButtonText.textContent = window.variantStrings.unavailable || '[ASSET_UNAVAILABLE]';
                  if (price) price.classList.add('visibility-hidden');
                }

                getVariantData() {
                  this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
                  return this.variantData;
                }

                updateURL() {
                  if (!this.currentVariant || this.dataset.updateUrl === 'false') return;
                  window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
                }

                updateMedia() {
                  if (!this.currentVariant?.featured_media) return;
                  
                  const mediaGallery = document.querySelector('.product-media-gallery');
                  if (!mediaGallery) return;

                  const newMedia = mediaGallery.querySelector(`[data-media-id="${this.currentVariant.featured_media.id}"]`);
                  if (!newMedia) return;

                  const mainMedia = mediaGallery.querySelector('.main-media-container img');
                  if (mainMedia) {
                    mainMedia.src = this.currentVariant.featured_media.preview_image.src;
                    mainMedia.alt = this.currentVariant.featured_media.preview_image.alt;
                  }
                }
              }

              customElements.define('variant-selects', VariantSelects);

              // Initialize variant strings
              window.variantStrings = {
                addToCart: {{ 'products.product.add_to_cart' | t | json }},
                soldOut: {{ 'products.product.sold_out' | t | json }},
                unavailable: {{ 'products.product.unavailable' | t | json }}
              };

              window.cartStrings = {
                money_format: {{ shop.money_format | json }}
              };
              
              // Debug helper - remove in production
              window.debugVariantSelection = function() {
                const variantSelects = document.querySelector('variant-selects');
                const productForm = document.querySelector('#product-form-{{ section.id }}');
                const variantInput = productForm?.querySelector('input[name="id"]');
                
                console.group('[VARIANT DEBUG] Current State');
                console.log('Variant selects element:', variantSelects);
                console.log('Current variant:', variantSelects?.currentVariant);
                console.log('Product form:', productForm);
                console.log('Variant input value:', variantInput?.value);
                console.log('Form data test:', new FormData(productForm));
                console.groupEnd();
              };
            </script>

            {% if section.settings.show_social_sharing %}
              <div class="social-sharing data-box">
                <div class="data-box-header">//:SHARE_PROTOCOL://</div>
                <div class="social-content">
                  {% render 'social-sharing', share_title: product.title, share_permalink: product.url, share_image: product.featured_image %}
                </div>
              </div>
            {% endif %}

            {% if section.settings.show_pickup_availability and product.selected_or_first_available_variant.store_availabilities.size > 0 %}
              <div class="pickup-availability data-box">
                <div class="data-box-header">//:PICKUP_LOCATIONS://</div>
                <div class="pickup-content">
                  {% render 'pickup-availability', variant: product.selected_or_first_available_variant %}
                </div>
              </div>
            {% endif %}
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Zoom Modal - Always render for JavaScript functionality -->
<div id="zoom-modal-{{ section.id }}" class="zoom-modal" aria-hidden="true">
  <div class="zoom-modal-content">
    <button type="button" class="zoom-close" aria-label="Close zoom">&times;</button>
    <img id="zoom-image-{{ section.id }}" src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'/%3E" alt="" class="zoom-image" loading="lazy">
  </div>
</div>

<script type="application/ld+json">
{
        "@context": "https://schema.org/",
  "@type": "Product",
  "name": {{ product.title | json }},
  "url": {{ request.origin | append: product.url | json }},
  {% if product.featured_image %}
    "image": [
      {{ product.featured_image | image_url: width: 800 | prepend: "https:" | json }}
    ],
  {% endif %}
  "description": {{ product.description | strip_html | json }},
  {% if product.vendor != blank %}
    "brand": {
      "@type": "Brand",
      "name": {{ product.vendor | json }}
    },
  {% endif %}
  "offers": [
    {% for variant in product.variants %}
      {
        "@type": "Offer",
        "availability": "{% if variant.available %}https://schema.org/InStock{% else %}https://schema.org/OutOfStock{% endif %}",
        "price": {{ variant.price | divided_by: 100.0 | json }},
        "priceCurrency": {{ cart.currency.iso_code | json }},
        "url": {{ request.origin | append: variant.url | json }}
      }{% unless forloop.last %},{% endunless %}
    {% endfor %}
  ]
}
</script>

{% schema %}
{
  "name": "Product",
  "tag": "section",
  "class": "section-product",
  "settings": [
    {
      "type": "header",
      "content": "Media"
    },
    {
      "type": "range",
      "id": "media_width",
      "min": 40,
      "max": 70,
      "step": 5,
      "unit": "%",
      "label": "Media width",
      "default": 50
    },
    {
      "type": "checkbox",
      "id": "show_thumbnails",
      "label": "Show thumbnail gallery",
      "default": true
    },
    {
      "type": "range",
      "id": "max_thumbnails",
      "min": 4,
      "max": 12,
      "step": 1,
      "label": "Maximum thumbnails to show",
      "default": 8
    },
    {
      "type": "checkbox",
      "id": "show_media_overlay",
      "label": "Show media overlay data",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_zoom",
      "label": "Enable image zoom",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "video_autoplay",
      "label": "Autoplay videos",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "video_loop",
      "label": "Loop videos",
      "default": true
    },
    {
      "type": "header",
      "content": "Product information"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_description",
      "label": "Show product description",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_glitch_effect",
      "label": "Enable glitch effect on title",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_inventory",
      "label": "Show inventory levels",
      "default": true
    },
    {
      "type": "header",
      "content": "Variants"
    },
    {
      "type": "select",
      "id": "variant_style",
      "label": "Variant picker style",
      "options": [
        {
          "value": "dropdown",
          "label": "Dropdown"
        },
        {
          "value": "buttons",
          "label": "Buttons"
        }
      ],
      "default": "buttons"
    },
    {
      "type": "header",
      "content": "Purchase options"
    },
    {
      "type": "checkbox",
      "id": "show_quantity_selector",
      "label": "Show quantity selector",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_payment_button",
      "label": "Show dynamic checkout button",
      "info": "Lets customers check out directly using their preferred payment method. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
      "default": true
    },
    {
      "type": "text",
      "id": "add_to_cart_text",
      "label": "Add to cart button text",
      "default": "[ADD_TO_INVENTORY_CORE]"
    },
    {
      "type": "text",
      "id": "sold_out_text",
      "label": "Sold out button text",
      "default": "[ASSET_UNAVAILABLE]"
    },
    {
      "type": "header",
      "content": "Social sharing"
    },
    {
      "type": "checkbox",
      "id": "show_social_sharing",
      "label": "Show social sharing buttons",
      "info": "Display cyberpunk-themed social sharing options",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_product_recommendations",
      "label": "Show product recommendations",
      "info": "AI-powered product recommendations based on this product",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_pickup_availability",
      "label": "Show pickup availability",
      "default": true
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Make section full width",
      "default": false
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "Color scheme",
      "options": [
        {
          "value": "background-1",
          "label": "Background 1"
        },
        {
          "value": "background-2",
          "label": "Background 2"
        },
        {
          "value": "inverse",
          "label": "Inverse"
        },
        {
          "value": "accent-1",
          "label": "Accent 1"
        },
        {
          "value": "accent-2",
          "label": "Accent 2"
        }
      ],
      "default": "background-1"
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ]
}
{% endschema %}

{% comment %} Product recommendations section - only show if enabled {% endcomment %}
{% if section.settings.show_product_recommendations %}
  {% section 'product-recommendations' %}
{% endif %}