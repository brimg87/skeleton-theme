{% comment %}
  Modern Product Section - 2024 Shopify Standards
  Features: Variant selection, responsive images, structured data, accessibility, customization
{% endcomment %}

{{ 'section-product.css' | asset_url | stylesheet_tag }}

<section class="breadcrumb-trail">
  <div class="container">
    <nav aria-label="Breadcrumb">
      <a href="{{ routes.root_url }}">STARSIDE_ARMORY</a> &gt;
      {% if product.collections.first %}
        <a href="{{ product.collections.first.url }}">{{ product.collections.first.title | upcase | replace: ' ', '_' }}</a> &gt;
      {% endif %}
      <span class="current-item" aria-current="page">{{ product.title | upcase | replace: ' ', '_' }}</span>
    </nav>
  </div>
</section>

<section id="product-{{ section.id }}" class="product-interface-section section-padding{% if section.settings.color_scheme != 'background-1' %} color-{{ section.settings.color_scheme }}{% endif %}" 
         style="--section-padding-top: {{ section.settings.padding_top }}px; --section-padding-bottom: {{ section.settings.padding_bottom }}px;"
         itemscope itemtype="http://schema.org/Product">
  
  <div class="{% if section.settings.full_width %}page-width-desktop{% else %}container{% endif %}">
    <div class="product-layout" style="--product-media-width: {{ section.settings.media_width }}%;">
      
      <!-- Product Media Section -->
      <div class="product-visuals data-box">
        <div class="data-box-header">//: VISUAL_DATA ://</div>
        
        <div class="product-media-gallery">
          <div class="main-media-container">
            {%- if product.featured_media -%}
              <div class="product-media" data-media-id="{{ product.featured_media.id }}">
                {%- if product.featured_media.media_type == 'image' -%}
                  <img src="{{ product.featured_media | image_url: width: 800 }}" 
                       alt="{{ product.featured_media.alt | escape }}"
                       id="ProductMainImage-{{ section.id }}"
                       width="800"
                       height="{{ 800 | divided_by: product.featured_media.aspect_ratio | round }}"
                       loading="eager"
                       sizes="(min-width: 990px) {{ section.settings.media_width }}vw, 100vw"
                       srcset="{{ product.featured_media | image_url: width: 400 }} 400w,
                               {{ product.featured_media | image_url: width: 600 }} 600w,
                               {{ product.featured_media | image_url: width: 800 }} 800w,
                               {{ product.featured_media | image_url: width: 1200 }} 1200w"
                       itemprop="image">
                {%- elsif product.featured_media.media_type == 'video' -%}
                  {{ product.featured_media | video_tag: controls: true, muted: true, loop: true }}
                {%- elsif product.featured_media.media_type == 'model' -%}
                  {{ product.featured_media | model_viewer_tag }}
                {%- endif -%}
              </div>
            {%- else -%}
              <div class="product-media-placeholder">
                {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
              </div>
            {%- endif -%}
            
            {% if section.settings.show_media_overlay %}
              <div class="image-overlay-data">SYS_IMG_DISPLAY_{{ product.featured_media.position | default: '01' }}</div>
            {% endif %}
          </div>

          {% if product.media.size > 1 and section.settings.show_thumbnails %}
            <div class="thumbnail-gallery" role="tablist" aria-label="Product media gallery">
              {% for media in product.media limit: section.settings.max_thumbnails %}
                <button type="button" 
                        class="thumbnail-btn {% if media == product.featured_media %}active{% endif %}" 
                        data-media-id="{{ media.id }}"
                        data-media-type="{{ media.media_type }}"
                        {% if media.media_type == 'image' %}
                          data-src="{{ media | image_url: width: 800 }}"
                          data-srcset="{{ media | image_url: width: 400 }} 400w, {{ media | image_url: width: 800 }} 800w"
                        {% endif %}
                        role="tab"
                        aria-selected="{% if media == product.featured_media %}true{% else %}false{% endif %}"
                        aria-controls="ProductMainImage-{{ section.id }}"
                        aria-label="Load {{ media.media_type }} {{ forloop.index }}">
                  {%- if media.media_type == 'image' -%}
                    <img src="{{ media | image_url: width: 120 }}" 
                         alt="{{ media.alt | escape }}"
                         width="120"
                         height="{{ 120 | divided_by: media.aspect_ratio | round }}"
                         loading="lazy">
                  {%- elsif media.media_type == 'video' -%}
                    <img src="{{ media.preview_image | image_url: width: 120 }}" 
                         alt="{{ media.alt | escape }}"
                         width="120"
                         height="{{ 120 | divided_by: media.preview_image.aspect_ratio | round }}"
                         loading="lazy">
                    <span class="media-icon video-icon" aria-hidden="true">â–¶</span>
                  {%- elsif media.media_type == 'model' -%}
                    <img src="{{ media.preview_image | image_url: width: 120 }}" 
                         alt="{{ media.alt | escape }}"
                         width="120"
                         height="{{ 120 | divided_by: media.preview_image.aspect_ratio | round }}"
                         loading="lazy">
                    <span class="media-icon model-icon" aria-hidden="true">3D</span>
                  {%- endif -%}
                </button>
              {% endfor %}
            </div>
          {% endif %}
        </div>
      </div>

      <!-- Product Information Section -->
      <div class="product-data">
        <div class="data-box">
          <div class="data-box-header">//: ITEM_SPECIFICATIONS ://</div>
          <div class="product-info-content">
            
            {% if section.settings.show_vendor and product.vendor != blank %}
              <div class="product-vendor" itemprop="brand" itemscope itemtype="http://schema.org/Brand">
                <span itemprop="name">{{ product.vendor }}</span>
              </div>
            {% endif %}

            <h1 class="product-title-detail{% if section.settings.enable_glitch_effect %} glitch{% endif %}" 
                {% if section.settings.enable_glitch_effect %}data-text="{{ product.title | escape }}"{% endif %}
                itemprop="name">
              {{ product.title | escape }}
            </h1>
            
            <div class="system-diagnostic-line">
              <span class="diag-label">//:ITEM_IDENT:</span>
              <span class="diag-value id-value" itemprop="sku">{{ product.selected_or_first_available_variant.sku | default: 'N/A' }}</span>
              <span class="diag-label">//:OP_STATUS:</span>
              <span class="diag-value status-value {% if product.available %}status-operational{% else %}status-offline{% endif %}">
                {% if product.available %}[AVAILABLE]{% else %}[OUT_OF_STOCK]{% endif %}
              </span>
            </div>

            {% if product.description != blank and section.settings.show_description %}
              <div class="product-short-desc rte" itemprop="description">
                {{ product.description }}
              </div>
            {% endif %}

            <!-- Price Block -->
            <div class="price-block data-box" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
              <div class="data-box-header">//:TRANSACTION_MODULE://</div>
              <div class="price-content">
                <span class="price-label">ACQUISITION_COST:</span>
                <div class="price-display">
                  <span class="product-price-detail terminal-green-glow" id="ProductPrice-{{ section.id }}" itemprop="price" content="{{ product.selected_or_first_available_variant.price | divided_by: 100.0 }}">
                    {{ product.selected_or_first_available_variant.price | money }}
                  </span>
                  {% if product.selected_or_first_available_variant.compare_at_price > product.selected_or_first_available_variant.price %}
                    <span class="compare-at-price">
                      <span class="visually-hidden">{{ 'products.product.regular_price' | t }}</span>
                      <s>{{ product.selected_or_first_available_variant.compare_at_price | money }}</s>
                    </span>
                  {% endif %}
                </div>
                
                <meta itemprop="priceCurrency" content="{{ cart.currency.iso_code }}">
                {% if product.selected_or_first_available_variant.available %}
                  <link itemprop="availability" href="http://schema.org/InStock">
                {% else %}
                  <link itemprop="availability" href="http://schema.org/OutOfStock">
                {% endif %}
                
                {% if section.settings.show_inventory %}
                  <span class="stock-indicator">//:STOCK_LEVEL: 
                    {% assign variant = product.selected_or_first_available_variant %}
                    {% if variant.inventory_management == "shopify" and variant.inventory_quantity <= 0 %}
                      [DEPLETED]
                    {% elsif variant.inventory_quantity < 5 and variant.inventory_quantity > 0 %}
                      [LOW: {{ variant.inventory_quantity }}]
                    {% else %}
                      [AVAILABLE]
                    {% endif %}
                  </span>
                {% endif %}
              </div>
            </div>

            <!-- Product Form -->
            {%- form 'product', product, id: "product-form-{{ section.id }}", class: "product-form", novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
              <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" class="product-variant-id">
              
              <!-- Variant Selection -->
              {% unless product.has_only_default_variant %}
                <div class="variant-selection data-box">
                  <div class="data-box-header">//:CONFIGURATION_OPTIONS://</div>
                  <div class="variant-content">
                    {% for option in product.options_with_values %}
                      <div class="variant-option">
                        <label for="Option-{{ section.id }}-{{ forloop.index0 }}" class="variant-label">
                          {{ option.name | upcase }}:
                        </label>
                        <div class="variant-input-wrapper">
                          {% if section.settings.variant_style == 'dropdown' %}
                            <select id="Option-{{ section.id }}-{{ forloop.index0 }}" 
                                    name="options[{{ option.name | escape }}]" 
                                    class="variant-select">
                              {% for value in option.values %}
                                <option value="{{ value | escape }}" 
                                        {% if option.selected_value == value %}selected="selected"{% endif %}>
                                  {{ value }}
                                </option>
                              {% endfor %}
                            </select>
                          {% else %}
                            <div class="variant-buttons" role="radiogroup" aria-labelledby="Option-{{ section.id }}-{{ forloop.index0 }}">
                              {% for value in option.values %}
                                <input type="radio" 
                                       id="Option-{{ section.id }}-{{ forloop.index0 }}-{{ forloop.index }}"
                                       name="options[{{ option.name | escape }}]" 
                                       value="{{ value | escape }}"
                                       {% if option.selected_value == value %}checked{% endif %}
                                       class="variant-radio visually-hidden">
                                <label for="Option-{{ section.id }}-{{ forloop.index0 }}-{{ forloop.index }}" 
                                       class="variant-button">
                                  {{ value }}
                                </label>
                              {% endfor %}
                            </div>
                          {% endif %}
                        </div>
                      </div>
                    {% endfor %}
                  </div>
                </div>
              {% endunless %}

              <!-- Actions Block -->
              <div class="actions-block data-box">
                <div class="data-box-header">//:ENGAGEMENT_PROTOCOL://</div>
                <div class="action-content">
                  {% if section.settings.show_quantity_selector %}
                    <div class="quantity-selector">
                      <label for="Quantity-{{ section.id }}" class="diag-label">QTY:</label>
                      <button type="button" class="qty-btn btn-qty" data-action="decrease" aria-label="Decrease quantity">-</button>
                      <input type="number" 
                             id="Quantity-{{ section.id }}" 
                             name="quantity" 
                             value="1" 
                             min="1" 
                             {% if product.selected_or_first_available_variant.inventory_management == "shopify" and product.selected_or_first_available_variant.inventory_policy == "deny" %}
                               max="{{ product.selected_or_first_available_variant.inventory_quantity }}"
                             {% endif %}
                             class="quantity-input"
                             aria-label="Product quantity">
                      <button type="button" class="qty-btn btn-qty" data-action="increase" aria-label="Increase quantity">+</button>
                    </div>
                  {% endif %}
                  
                  <button type="submit" 
                          name="add" 
                          class="btn btn-cta-primary product-page-cta" 
                          {% unless product.selected_or_first_available_variant.available %}disabled="disabled"{% endunless %}
                          aria-describedby="ProductPrice-{{ section.id }}">
                    <span class="btn-text">
                      {% if product.selected_or_first_available_variant.available %}
                        {{ section.settings.add_to_cart_text | default: '[ADD_TO_INVENTORY_CORE]' }}
                      {% else %}
                        {{ section.settings.sold_out_text | default: '[ASSET_UNAVAILABLE]' }}
                      {% endif %}
                    </span>
                    <div class="loading-overlay" aria-hidden="true">
                      <div class="loading-spinner"></div>
                    </div>
                  </button>

                  {% if section.settings.enable_payment_button %}
                    {{ form | payment_button }}
                  {% endif %}
                </div>
              </div>
            {%- endform -%}

            {% if section.settings.show_social_sharing %}
              <div class="social-sharing data-box">
                <div class="data-box-header">//:SHARE_PROTOCOL://</div>
                <div class="social-content">
                  {% render 'social-sharing', share_title: product.title, share_permalink: product.url, share_image: product.featured_image %}
                </div>
              </div>
            {% endif %}
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script type="application/ld+json">
{
  "@context": "http://schema.org/",
  "@type": "Product",
  "name": {{ product.title | json }},
  "url": {{ request.origin | append: product.url | json }},
  {% if product.featured_image %}
    "image": [
      {{ product.featured_image | image_url: width: 800 | prepend: "https:" | json }}
    ],
  {% endif %}
  "description": {{ product.description | strip_html | json }},
  {% if product.vendor != blank %}
    "brand": {
      "@type": "Brand",
      "name": {{ product.vendor | json }}
    },
  {% endif %}
  "offers": [
    {% for variant in product.variants %}
      {
        "@type": "Offer",
        "availability": "{% if variant.available %}http://schema.org/InStock{% else %}http://schema.org/OutOfStock{% endif %}",
        "price": {{ variant.price | divided_by: 100.0 | json }},
        "priceCurrency": {{ cart.currency.iso_code | json }},
        "url": {{ request.origin | append: variant.url | json }}
      }{% unless forloop.last %},{% endunless %}
    {% endfor %}
  ]
}
</script>

{% schema %}
{
  "name": "Product",
  "tag": "section",
  "class": "section-product",
  "settings": [
    {
      "type": "header",
      "content": "Media"
    },
    {
      "type": "range",
      "id": "media_width",
      "min": 40,
      "max": 70,
      "step": 5,
      "unit": "%",
      "label": "Media width",
      "default": 50
    },
    {
      "type": "checkbox",
      "id": "show_thumbnails",
      "label": "Show thumbnail gallery",
      "default": true
    },
    {
      "type": "range",
      "id": "max_thumbnails",
      "min": 4,
      "max": 12,
      "step": 1,
      "label": "Maximum thumbnails to show",
      "default": 8
    },
    {
      "type": "checkbox",
      "id": "show_media_overlay",
      "label": "Show media overlay data",
      "default": true
    },
    {
      "type": "header",
      "content": "Product information"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_description",
      "label": "Show product description",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_glitch_effect",
      "label": "Enable glitch effect on title",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_inventory",
      "label": "Show inventory levels",
      "default": true
    },
    {
      "type": "header",
      "content": "Variants"
    },
    {
      "type": "select",
      "id": "variant_style",
      "label": "Variant picker style",
      "options": [
        {
          "value": "dropdown",
          "label": "Dropdown"
        },
        {
          "value": "buttons",
          "label": "Buttons"
        }
      ],
      "default": "buttons"
    },
    {
      "type": "header",
      "content": "Purchase options"
    },
    {
      "type": "checkbox",
      "id": "show_quantity_selector",
      "label": "Show quantity selector",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_payment_button",
      "label": "Show dynamic checkout button",
      "info": "Lets customers check out directly using their preferred payment method. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
      "default": true
    },
    {
      "type": "text",
      "id": "add_to_cart_text",
      "label": "Add to cart button text",
      "default": "[ADD_TO_INVENTORY_CORE]"
    },
    {
      "type": "text",
      "id": "sold_out_text",
      "label": "Sold out button text",
      "default": "[ASSET_UNAVAILABLE]"
    },
    {
      "type": "header",
      "content": "Social sharing"
    },
    {
      "type": "checkbox",
      "id": "show_social_sharing",
      "label": "Show social sharing buttons",
      "default": false
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Make section full width",
      "default": false
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "Color scheme",
      "options": [
        {
          "value": "background-1",
          "label": "Background 1"
        },
        {
          "value": "background-2",
          "label": "Background 2"
        },
        {
          "value": "inverse",
          "label": "Inverse"
        },
        {
          "value": "accent-1",
          "label": "Accent 1"
        },
        {
          "value": "accent-2",
          "label": "Accent 2"
        }
      ],
      "default": "background-1"
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ]
}
{% endschema %}

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Product variant selection functionality
  const productForm = document.querySelector('#product-form-{{ section.id }}');
  const variantInputs = productForm.querySelectorAll('input[name^="options"], select[name^="options"]');
  const priceElement = document.querySelector('#ProductPrice-{{ section.id }}');
  const addToCartButton = productForm.querySelector('[type="submit"]');
  const quantityInput = productForm.querySelector('#Quantity-{{ section.id }}');
  
  // Variant data
  const variants = {{ product.variants | json }};
  
  // Update variant when options change
  variantInputs.forEach(input => {
    input.addEventListener('change', updateVariant);
  });
  
  function updateVariant() {
    const selectedOptions = {};
    variantInputs.forEach(input => {
      const optionName = input.name.replace('options[', '').replace(']', '');
      selectedOptions[optionName] = input.value;
    });
    
    const selectedVariant = variants.find(variant => {
      return variant.options.every((option, index) => {
        const optionName = {{ product.options | json }}[index];
        return selectedOptions[optionName] === option;
      });
    });
    
    if (selectedVariant) {
      // Update hidden variant ID
      productForm.querySelector('.product-variant-id').value = selectedVariant.id;
      
      // Update price
      priceElement.textContent = new Intl.NumberFormat('{{ cart.currency.iso_code }}', {
        style: 'currency',
        currency: '{{ cart.currency.iso_code }}'
      }).format(selectedVariant.price / 100);
      
      // Update availability
      if (selectedVariant.available) {
        addToCartButton.disabled = false;
        addToCartButton.querySelector('.btn-text').textContent = '{{ section.settings.add_to_cart_text | default: "[ADD_TO_INVENTORY_CORE]" }}';
      } else {
        addToCartButton.disabled = true;
        addToCartButton.querySelector('.btn-text').textContent = '{{ section.settings.sold_out_text | default: "[ASSET_UNAVAILABLE]" }}';
      }
      
      // Update quantity max if inventory tracking
      if (selectedVariant.inventory_management === 'shopify' && selectedVariant.inventory_policy === 'deny') {
        quantityInput.max = selectedVariant.inventory_quantity;
      } else {
        quantityInput.removeAttribute('max');
      }
    }
  }
  
  // Quantity selector functionality
  const qtyButtons = productForm.querySelectorAll('.qty-btn');
  qtyButtons.forEach(button => {
    button.addEventListener('click', function() {
      const action = this.dataset.action;
      const input = this.parentNode.querySelector('.quantity-input');
      let value = parseInt(input.value);
      
      if (action === 'increase') {
        value++;
        if (input.max && value > parseInt(input.max)) {
          value = parseInt(input.max);
        }
      } else if (action === 'decrease' && value > 1) {
        value--;
      }
      
      input.value = value;
    });
  });
  
  // Media gallery functionality
  const thumbnailButtons = document.querySelectorAll('.thumbnail-btn');
  const mainMediaContainer = document.querySelector('.main-media-container');
  
  thumbnailButtons.forEach(button => {
    button.addEventListener('click', function() {
      // Remove active class from all thumbnails
      thumbnailButtons.forEach(btn => {
        btn.classList.remove('active');
        btn.setAttribute('aria-selected', 'false');
      });
      
      // Add active class to clicked thumbnail
      this.classList.add('active');
      this.setAttribute('aria-selected', 'true');
      
      // Update main media
      const mediaType = this.dataset.mediaType;
      const mediaId = this.dataset.mediaId;
      
      if (mediaType === 'image') {
        const newSrc = this.dataset.src;
        const newSrcset = this.dataset.srcset;
        const mainImage = mainMediaContainer.querySelector('img');
        
        if (mainImage) {
          mainImage.src = newSrc;
          mainImage.srcset = newSrcset;
        }
      }
      
      // Update media container data attribute
      const mediaContainer = mainMediaContainer.querySelector('.product-media');
      if (mediaContainer) {
        mediaContainer.dataset.mediaId = mediaId;
      }
    });
  });
  
  // Form submission with loading state
  productForm.addEventListener('submit', function() {
    addToCartButton.classList.add('loading');
    addToCartButton.disabled = true;
  });
});
</script>

{% comment %} Recommended products section would typically be its own section file {% endcomment %}
{% section 'product-recommendations' %}